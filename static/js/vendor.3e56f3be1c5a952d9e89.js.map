{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/@tweenjs/tween.js/dist/tween.esm.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js"],"names":["inspectMp4","textifyMp4","parseType","__webpack_require__","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","parse","avc1","data","view","DataView","buffer","byteOffset","byteLength","dataReferenceIndex","getUint16","width","height","horizresolution","vertresolution","frameCount","depth","config","subarray","avcC","numOfPictureParameterSets","nalSize","offset","i","result","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","push","Uint8Array","btrt","bufferSizeDB","getUint32","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","length","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","String","fromCharCode","decodeURIComponent","escape","mdat","nals","avcStream","avcView","nalParse","mdhd","language","creationTime","modificationTime","timescale","duration","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","Math","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","size","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","type","end","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","Array","join","map","index","Object","keys","filter","key","prefix","value","bytes","prototype","slice","call","byte","toString","match","line","JSON","stringify","split","module","exports","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","findBox","startTime","getVideoTrackIds","getTracks","toUnsigned","toHexString","path","subresults","results","concat","init","reduce","id","fragment","trafs","baseTimes","apply","scale","Infinity","min","isFinite","videoTrackIds","forEach","hdlrs","tkhds","tracks","track","codec","codecConfig","codecBox","test","replace","warn","condition","message","isError","err","indexOf","isExtendedError","constructor","_name","extend","a","b","View","functional","props","default","render","_","ref","children","parent","routerView","h","$createElement","route","$route","cache","_routerViewCache","inactive","_routerRoot","vnodeData","$vnode","keepAlive","_directInactive","_inactive","$parent","routerViewDepth","cachedData","cachedComponent","component","configProps","fillPropsinData","matched","components","registerRouteInstance","vm","val","current","instances","hook","prepatch","vnode","componentInstance","propsToPass","params","undefined","resolveProps","attrs","encodeReserveRE","encodeReserveReplacer","c","charCodeAt","commaRE","encode","str","encodeURIComponent","decode","parseQuery","query","res","trim","param","parts","shift","isArray","stringifyQuery","obj","val2","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","options","clone","e","meta","hash","fullPath","getFullPath","unshift","formatMatch","freeze","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","every","aVal","bVal","resolvePath","relative","base","append","firstChar","charAt","stack","pop","segments","segment","cleanPath","isarray","arr","pathToRegexp_1","pathToRegexp","parse_1","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","tokens","defaultDelimiter","delimiter","exec","m","escaped","next","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","pretty","token","TypeError","j","attachKeys","re","sensitive","strict","endsWithDelimiter","groups","source","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","create","fillParams","routeMsg","filler","pathMatch","normalizeLocation","raw","_normalized","params$1","rawPath","parsedPath","hashIndex","queryIndex","parsePath","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","_Vue","toTypes","eventTypes","noop","Link","to","required","exact","Boolean","activeClass","exactActiveClass","event","this$1","this","$router","resolve","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","target","queryIncludes","isIncludedRoute","handler","guardEvent","on","click","class","scopedSlot","$scopedSlots","$hasNormal","navigate","isActive","isExactActive","findAnchor","child","$slots","isStatic","aData","handler$1","event$1","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","preventDefault","install","Vue","installed","isDef","registerInstance","callVal","$options","_parentVnode","mixin","beforeCreate","_router","util","defineReactive","history","destroyed","defineProperty","get","_route","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","inBrowser","window","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","beforeEnter","childMatchAs","alias","aliases","aliasRoute","l","splice","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","len","Time","performance","now","genStateKey","toFixed","_key","getStateKey","setStateKey","positionStore","setupScroll","protocolAndPath","protocol","host","absolutePath","stateCopy","state","replaceState","addEventListener","saveScrollPosition","handleScroll","from","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","hashStartsWithNumberRE","isObject","selector","el","document","getElementById","querySelector","docRect","documentElement","getBoundingClientRect","elRect","left","top","getElementPosition","scrollTo","ua","supportsPushState","navigator","userAgent","pushState","url","runQueue","queue","fn","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","cid","once","resolvedDef","__esModule","hasSymbol","Symbol","toStringTag","resolved","reject","reason","msg","Error","comp","flatten","called","args","arguments","NavigationDuplicated","normalizedLocation","writable","configurable","__proto__","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","max","updated","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","cbs","isValid","poll","_isBeingDestroyed","setTimeout","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","expectScroll","supportsScroll","initLocation","getLocation","go","n","fromRoute","getCurrentLocation","decodeURI","pathname","search","HashHistory","fallback","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","searchIndex","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","mode","prototypeAccessors","registerHook","list","$once","setupHashListener","beforeEach","beforeResolve","afterEach","Promise","back","forward","getMatchedComponents","createHref","normalizedTo","defineProperties","use","__webpack_exports__","isFunction","parseHeaders","xtend","initParams","uri","callback","createXHR","_createXHR","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","nodeName","getXml","isJson","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","code","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","StreamTypes","handleRollover","probe","ts","aac","ONE_SECOND_IN_TS","parseAudioPes_","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","audio","parseVideoPes_","frame","pes","currentFrame","video","firstKeyFrame","set","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","baseTimestamp","isLikelyAacData","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","process","_Group","_tweens","_tweensAddedDuringUpdate","getAll","tweenId","removeAll","add","tween","getId","remove","update","time","preserve","tweenIds","TWEEN","_isPlaying","Group","_nextId","nextId","hrtime","self","getTime","Tween","object","_isPaused","_pauseStart","_object","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_repeat","_repeatDelayTime","_yoyo","_reversed","_delayTime","_startTime","_easingFunction","Easing","Linear","None","_interpolationFunction","Interpolation","_chainedTweens","_onStartCallback","_onStartCallbackFired","_onUpdateCallback","_onRepeatCallback","_onCompleteCallback","_onStopCallback","_group","_id","isPlaying","isPaused","properties","d","start","property","parseFloat","stop","stopChainedTweens","pause","resume","numChainedTweens","delay","amount","times","repeatDelay","yoyo","easing","easingFunction","interpolation","interpolationFunction","chain","onStart","onUpdate","onRepeat","onStop","elapsed","tmp","k","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","PI","sin","Exponential","Circular","sqrt","Elastic","Back","s","Bounce","f","floor","Utils","Bezier","pw","bn","Bernstein","CatmullRom","p0","p1","t","fc","Factorial","p2","p3","v0","v1","t2","_extends","assign","_inheritsLoose","subClass","superClass","Stream","listeners","_proto","listener","off","trigger","callbacks","dispose","pipe","destination","LineStream","_Stream","_this","nextNewline","substring","parseAttributes","attributes","attr","ParseStream","customParsers","tagMappers","_this2","acc","mapper","mappedLine","newLine","tagType","title","parseInt","number","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","toLowerCase","PRECISE","text","addParser","_ref","_this3","expression","customType","dataParser","addTagMapper","_ref2","Parser","lineStream","parseStream","currentMap","ReferenceError","_assertThisInitialized","uris","currentUri","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","entry","mediaGroup","rendition","allow-cache","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","KEYID","contentProtection","com.widevine.alpha","schemeIdUri","keyId","pssh","b64Text","decodedString","window_default","atob","decodeB64ToUint8Array","iv","media-sequence","discontinuity-sequence","playlist-type","playlist","stream-inf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","program-date-time","targetduration","targetDuration","totalduration","totalDuration","isNaN","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","comment","custom","chunk","classCallCheck","Constructor","createClass","descriptor","enumerable","protoProps","staticProps","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","timeout_","setPrototypeOf","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","STEP","asyncStream_","decryptChunk_","padded","video_es_version","video_es_history","video_es_LogByTypeFactory","log","level","lvl","levels","lvlRegExp","video_es_log","createLogger","logByType","_len","subname","all","debug","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","each","video_es_assign","sources","isPlain","computedStyle","prop","getComputedStyle","computedStyleValue","getPropertyValue","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","createQuerier","context","ctx","video_es_createEl","tagName","content","createElement","getOwnPropertyNames","propName","setAttribute","textContent","attrName","appendContent","innerText","prependTo","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","removeClass","classToRemove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","parentNode","rect","findPosition","docEl","clientLeft","scrollLeft","clientTop","scrollTop","round","getPointerPosition","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","buttons","videojs","$","$$","Dom","createEl","_windowLoaded","video_es_autoSetup","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","removeEventListener","video_es_FakeWeakMap","video_es_createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","FakeWeakMap","vdata","access","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","uid","bound","video_es_throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","isEvented","eventBusEl_","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","string","w","toTitleCase","mergeOptions","video_es_Component","Component","play","player_","parentComponent_","options_","id_","SetSham","name_","el_","children_","childIndex_","childNameIndex_","Set","set_","_proto2","thisArg","setTimeoutIds_","setIntervalIds_","rafIds_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","localize","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","cancelAnimationFrame","_this4","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","video_es__inheritsLoose","_setPrototypeOf","o","p","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","Function","video_es__assertThisInitialized","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","keycode_default","isEventKey","focusIndex","focusableEls","focusableEls_","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","div","addToBody","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","pathParts","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","video_es_loadTrack","crossOrigin","xhr_default","responseBody","loaded_","tech_","video_es_TextTrack","_Track","TextTrack","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","PosterImage","_ClickableComponent","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","video_es_CloseButton","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","implementation","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","sizeKey","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_PictureInPictureToggle","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","video_es_VolumePanel","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","video_es_MenuButton","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","liveEdgeWindow","seekableIncrement_","trackLive_","pastSeekEnd_","mid","sortedList","newSeekEnd","lastSeekEnd_","seekableIncrementList_","abs","sort","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","video_es_set","reduceRight","video_es_get","_this8","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hookOnce","original","removeHook","video_es_style","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","writeable","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","baseURL","relativeURL","url_toolkit_default","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","mediaChange","started","intervalDuration","endSequence","expired","backward","backwardDuration","forwardDuration","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","segmentXhrHeaders","byterangeEnd","Range","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","initSegment","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","flushSource","partialFlush","endTimeline","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","pasp","payload","setUint32","audioobjecttype","samplingfrequencyindex","trackFragments","avc1Box","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","sarRatio","hSpacing","vSpacing","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalCount","nalUnitType","currentGop","gops","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","count","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","timelineStartPts","keepOriginalTimestamps","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$1","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","METADATA_STREAM_TYPE","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","dispatchType","frameStart","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","processPes_","STREAM_TYPES","h264","adts","timedMetadata","stream$$1","forceFlush","packetFlushable","packetData","ptsDtsFlags","packetLength","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES","handlePartialSegments","frameNum","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","ONE_SECOND_IN_TS$3","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","MessageHandlers","transmuxer$$1","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","pair","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","requestSidx_","sidxRange","finishProcessingFn","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","mp4_inspector_default","sidxMapping","sidxKey","sidxRequestFinished_","mpd_parser_es","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","video_es_filterChangedSidxMappings","updatedMaster","mediaUri","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","disposeFn","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","keyBytes","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","isInitialized","timescales","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","caption_parser_default","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","clearAllCaptions","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","clearParsedCaptions","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","segmentTimestampInfo","ptsStartTime","dtsStartTime","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","loadHandler","errorHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","requestOptions","initialize","_settings$mediaTypes$","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","global","emptyObject","isUndef","isTrue","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","toNumber","makeMap","expectsLowerCase","isBuiltInTag","isReservedAttribute","hasOwn","cached","camelizeRE","camelize","capitalize","hyphenateRE","hyphenate","boundFn","toArray","_from","toObject","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","silent","productionTip","devtools","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","bailRE","_isServer","hasProto","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","isFF","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","ownKeys","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","targetStack","pushTarget","popTarget","VNode","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","createEmptyVNode","createTextVNode","cloneVNode","cloned","arrayProto","arrayMethods","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","copyAugment","walk","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","setter","childOb","dependArray","newVal","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","dedupeHooks","mergeAssets","key$1","inject","computed","provide","defaultStrat","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","stringIndex","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","cur","errorCaptured","globalHandleError","invokeWithErrorHandling","_handled","logError","timerFunc","isUsingMicroTask","flushCallbacks","copies","MutationObserver","setImmediate","counter","observer","textNode","characterData","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","createOnceHandler","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","_isVList","resolveInject","provideKey","_provided","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","bindObject","scopedSlotFn","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","prependModifier","symbol","installRenderHelpers","_o","_l","_t","_q","_m","_f","_k","_b","_v","_u","_g","_p","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","cloneAndMarkFunctionalResult","renderContext","mergeProps","componentVNodeHooks","hydrating","_isDestroyed","mountedNode","_isComponent","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","factory","errorComp","currentRenderingInstance","owners","loading","loadingComp","timerLoading","timerTimeout","$on","forceRender","renderCompleted","ensureCtor","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","extractPropsFromVNodeData","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","registerDeepBindings","_createElement","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","_hasHookEvent","$emit","waiting","flushing","currentFlushTimestamp","getNow","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","dirty","deps","newDeps","depIds","newDepIds","cleanupDeps","queueWatcher","oldValue","evaluate","teardown","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","initMixin","dataDef","propsDef","$set","$delete","stateMixin","hookRE","i$1","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","_render","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","mounted","configDef","delete","observable","installedPlugins","_installedPlugins","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","acceptValue","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","nodeOps","multiple","createElementNS","namespace","createComment","newNode","referenceNode","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","genComponentModel","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","updateDOMListeners","normalizeEvents","svgContainer","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","onEnd","transformRE","styles","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","toMs","enter","_leaveCb","cancelled","transition","_enterCb","appearClass","appearToClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","isRenderedModule","inVPre","childrenMatch","fullInvoke","isInitialPatch","isRealElement","oldElm","patchable","i$2","createPatchFunction","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","hasNoMatchingOption","actuallySetSelected","isMultiple","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","dx","dy","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","hasMove","_reflow","propertyName","_hasMove","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","parseText","tagRE","tokenValue","rawTokens","@binding","klass$1","staticKeys","transformNode","classBinding","genData","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","template","isPreTag","root","currentParent","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","for","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","iteratorMatch","iterator1","iterator2","parseFor","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","_warn","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","prevent","ctrl","alt","genHandlers","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","dynamicProps","createFunction","createCompileToFunctionFn","compiled","fnGenErrors","baseCompile","finalOptions","tips","tip","compileToFunctions","getShouldDecode","idToTemplate","mount","outerHTML","getOuterHTML","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","char","g","eval","scrollSetting","","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","reviver","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","segmentCache","parsedCaptions","parsingPartial","isPartial","isNewInit","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","resetCaptionStream","alert","confirm","prompt","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","argv","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_pauseOnExit","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","baseURLPath","newPath","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","searchInput","hasKeyCode","foundNamedKey","nameOrCode","backspace","pause/break","caps lock","page up","page down","home","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","break","caps","return","spc","spacebar","pgup","pgdn","ins","cmd","headersArr","parseUTCTiming","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","merge","objects","lists","urlToolkit","resolveUrl","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","startRange","endRange","segmentRange","_attributes$timescale","sourceDuration","NOW","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","periodDuration","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","toSegments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","sidxByteRange","sidxEnd","mediaReferences","mergeDiscontiguousPlaylists","_acc$name$segments","addSegmentInfoFromSidx","sidxMatch","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","mainPlaylist","formattedPlaylists","roleLabel","_attributes","formatAudioPlaylist","organizeAudioPlaylists","_attributes2","organizeVttPlaylists","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","segmentTime","nextS","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","psshNode","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme"],"mappings":"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","file":"static/js/vendor.3e56f3be1c5a952d9e89.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = +5d+\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar toHexString = require('../utils/bin').toHexString;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds, getTracks;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\n/**\n * Get all the video, audio, and hint tracks from a non fragmented\n * mp4 segment\n */\ngetTracks = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var tracks = [];\n\n  traks.forEach(function(trak) {\n    var track = {};\n    var tkhd = findBox(trak, ['tkhd'])[0];\n    var view, version;\n\n    // id\n    if (tkhd) {\n      view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      version = view.getUint8(0);\n\n      track.id = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var hdlr = findBox(trak, ['mdia', 'hdlr'])[0];\n\n    // type\n    if (hdlr) {\n      var type = parseType(hdlr.subarray(8, 12));\n\n      if (type === 'vide') {\n        track.type = 'video';\n      } else if (type === 'soun') {\n        track.type = 'audio';\n      } else {\n        track.type = type;\n      }\n    }\n\n\n    // codec\n    var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n    if (stsd) {\n      var sampleDescriptions = stsd.subarray(8);\n      // gives the codec type string\n      track.codec = parseType(sampleDescriptions.subarray(4, 8));\n\n      var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n      var codecConfig, codecConfigType;\n\n      if (codecBox) {\n        // https://tools.ietf.org/html/rfc6381#section-3.3\n        if ((/^[a-z]vc[1-9]$/i).test(track.codec)) {\n          // we don't need anything but the \"config\" parameter of the\n          // avc1 codecBox\n          codecConfig = codecBox.subarray(78);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n            track.codec += '.';\n\n            // left padded with zeroes for single digit hex\n            // profile idc\n            track.codec +=  toHexString(codecConfig[9]);\n            // the byte containing the constraint_set flags\n            track.codec += toHexString(codecConfig[10]);\n            // level idc\n            track.codec += toHexString(codecConfig[11]);\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'avc1.4d400d';\n          }\n        } else if ((/^mp4[a,v]$/i).test(track.codec)) {\n          // we do not need anything but the streamDescriptor of the mp4a codecBox\n          codecConfig = codecBox.subarray(28);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n            track.codec += '.' + toHexString(codecConfig[19]);\n            // this value is only a single digit\n            track.codec += '.' + toHexString((codecConfig[20] >>> 2) & 0x3f).replace(/^0/, '');\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'mp4a.40.2';\n          }\n        } else {\n          // TODO: show a warning? for unknown codec type\n        }\n      }\n    }\n\n    var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (mdhd && tkhd) {\n      var index = version === 0 ? 12 : 20;\n\n      track.timescale = toUnsigned(mdhd[index]     << 24 |\n                                   mdhd[index + 1] << 16 |\n                                   mdhd[index + 2] <<  8 |\n                                   mdhd[index + 3]);\n    }\n\n    tracks.push(track);\n  });\n\n  return tracks;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds,\n  tracks: getTracks\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","/*!\n  * vue-router v3.1.6\n  * (c) 2020 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction isExtendedError (constructor, err) {\n  return (\n    err instanceof constructor ||\n    // _name is to support IE9 too\n    (err && (err.name === constructor.name || err._name === constructor._name))\n  )\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode ? parent.$vnode.data : {};\n      if (vnodeData.routerView) {\n        depth++;\n      }\n      if (vnodeData.keepAlive && parent._directInactive && parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      var cachedData = cache[name];\n      var cachedComponent = cachedData && cachedData.component;\n      if (cachedComponent) {\n        // #2301\n        // pass props\n        if (cachedData.configProps) {\n          fillPropsinData(cachedComponent, data, cachedData.route, cachedData.configProps);\n        }\n        return h(cachedComponent, data, children)\n      } else {\n        // render previous empty view\n        return h()\n      }\n    }\n\n    var matched = route.matched[depth];\n    var component = matched && matched.components[name];\n\n    // render empty node if no matched route or no config component\n    if (!matched || !component) {\n      cache[name] = null;\n      return h()\n    }\n\n    // cache component\n    cache[name] = { component: component };\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n    };\n\n    var configProps = matched.props && matched.props[name];\n    // save route and configProps in cachce\n    if (configProps) {\n      extend(cache[name], {\n        route: route,\n        configProps: configProps\n      });\n      fillPropsinData(component, data, route, configProps);\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction fillPropsinData (component, data, route, configProps) {\n  // resolve props\n  var propsToPass = data.props = resolveProps(route, configProps);\n  if (propsToPass) {\n    // clone to prevent mutation\n    propsToPass = data.props = extend({}, propsToPass);\n    // pass non-declared props as attrs\n    var attrs = data.attrs = data.attrs || {};\n    for (var key in propsToPass) {\n      if (!component.props || !(key in component.props)) {\n        attrs[key] = propsToPass[key];\n        delete propsToPass[key];\n      }\n    }\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    // and fix #3106 so that you can work with location descriptor object having params.pathMatch equal to empty string\n    if (typeof params.pathMatch === 'string') { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      // Fix #3072 no warn if `pathMatch` is string\n      warn(typeof params.pathMatch === 'string', (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    next = extend({}, raw);\n    var params = next.params;\n    if (params && typeof params === 'object') {\n      next.params = extend({}, params);\n    }\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params$1 = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params$1;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params$1, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar noop = function () {};\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(\n      this.to,\n      current,\n      this.append\n    );\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback =\n      globalActiveClass == null ? 'router-link-active' : globalActiveClass;\n    var exactActiveClassFallback =\n      globalExactActiveClass == null\n        ? 'router-link-exact-active'\n        : globalExactActiveClass;\n    var activeClass =\n      this.activeClass == null ? activeClassFallback : this.activeClass;\n    var exactActiveClass =\n      this.exactActiveClass == null\n        ? exactActiveClassFallback\n        : this.exactActiveClass;\n\n    var compareTarget = route.redirectedFrom\n      ? createRoute(null, normalizeLocation(route.redirectedFrom), null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location, noop);\n        } else {\n          router.push(location, noop);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) {\n        on[e] = handler;\n      });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = { class: classes };\n\n    var scopedSlot =\n      !this.$scopedSlots.$hasNormal &&\n      this.$scopedSlots.default &&\n      this.$scopedSlots.default({\n        href: href,\n        route: route,\n        navigate: handler,\n        isActive: classes[activeClass],\n        isExactActive: classes[exactActiveClass]\n      });\n\n    if (scopedSlot) {\n      if (scopedSlot.length === 1) {\n        return scopedSlot[0]\n      } else if (scopedSlot.length > 1 || !scopedSlot.length) {\n        if (process.env.NODE_ENV !== 'production') {\n          warn(\n            false,\n            (\"RouterLink with to=\\\"\" + (this.to) + \"\\\" is trying to use a scoped slot but it didn't provide exactly one child. Wrapping the content with a span element.\")\n          );\n        }\n        return scopedSlot.length === 0 ? h() : h('span', {}, scopedSlot)\n      }\n    }\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = (a.data = extend({}, a.data));\n        aData.on = aData.on || {};\n        // transform existing events in both objects into arrays so we can push later\n        for (var event in aData.on) {\n          var handler$1 = aData.on[event];\n          if (event in on) {\n            aData.on[event] = Array.isArray(handler$1) ? handler$1 : [handler$1];\n          }\n        }\n        // append new listeners for router-link\n        for (var event$1 in on) {\n          if (event$1 in aData.on) {\n            // on[event] is always a function\n            aData.on[event$1].push(on[event$1]);\n          } else {\n            aData.on[event$1] = handler;\n          }\n        }\n\n        var aAttrs = (a.data.attrs = extend({}, a.data.attrs));\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // warn if routes do not include leading slashes\n    var found = pathList\n    // check for missing leading slash\n      .filter(function (path) { return path && path.charAt(0) !== '*' && path.charAt(0) !== '/'; });\n\n    if (found.length > 0) {\n      var pathNames = found.map(function (path) { return (\"- \" + path); }).join('\\n');\n      warn(false, (\"Non-nested routes must include a leading slash character. Fix the following routes: \\n\" + pathNames));\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(\n        path || name\n      )) + \" cannot be a \" + \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions =\n    route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(path, parent, pathToRegexpOptions.strict);\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props:\n      route.props == null\n        ? {}\n        : route.components\n          ? route.props\n          : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (\n        route.name &&\n        !route.redirect &&\n        route.children.some(function (child) { return /^\\/?$/.test(child.path); })\n      ) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n            \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n            \"the default child route will not be rendered. Remove the name from \" +\n            \"this route and use the name of the default child route for named \" +\n            \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];\n    for (var i = 0; i < aliases.length; ++i) {\n      var alias = aliases[i];\n      if (process.env.NODE_ENV !== 'production' && alias === path) {\n        warn(\n          false,\n          (\"Found an alias with the same value as the path: \\\"\" + path + \"\\\". You have to remove that alias. It will be ignored in development.\")\n        );\n        // skip in dev to make it work\n        continue\n      }\n\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    }\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n          \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (\n  path,\n  pathToRegexpOptions\n) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(\n        !keys[key.name],\n        (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\")\n      );\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (\n  path,\n  parent,\n  strict\n) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n      return _createRoute(record, location, redirectedFrom)\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n// use User Timing api (if present) for more accurate key precision\nvar Time =\n  inBrowser && window.performance && window.performance.now\n    ? window.performance\n    : Date;\n\nfunction genStateKey () {\n  return Time.now().toFixed(3)\n}\n\nvar _key = genStateKey();\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  return (_key = key)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  // Fix for #2774 Support for apps loaded from Windows file shares not mapped to network drives: replaced location.origin with\n  // window.location.protocol + '//' + window.location.host\n  // location.host contains the port and location.hostname doesn't\n  var protocolAndPath = window.location.protocol + '//' + window.location.host;\n  var absolutePath = window.location.href.replace(protocolAndPath, '');\n  // preserve existing history state as it could be overriden by the user\n  var stateCopy = extend({}, window.history.state);\n  stateCopy.key = getStateKey();\n  window.history.replaceState(stateCopy, '', absolutePath);\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(\n      router,\n      to,\n      from,\n      isPop ? position : null\n    );\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll\n        .then(function (shouldScroll) {\n          scrollToPosition((shouldScroll), position);\n        })\n        .catch(function (err) {\n          if (process.env.NODE_ENV !== 'production') {\n            assert(false, err.toString());\n          }\n        });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nvar hashStartsWithNumberRE = /^#\\d/;\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    // getElementById would still fail if the selector contains a more complicated query like #main[data-attr]\n    // but at the same time, it doesn't make much sense to select an element with an id and an extra selector\n    var el = hashStartsWithNumberRE.test(shouldScroll.selector) // $flow-disable-line\n      ? document.getElementById(shouldScroll.selector.slice(1)) // $flow-disable-line\n      : document.querySelector(shouldScroll.selector);\n\n    if (el) {\n      var offset =\n        shouldScroll.offset && typeof shouldScroll.offset === 'object'\n          ? shouldScroll.offset\n          : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState =\n  inBrowser &&\n  (function () {\n    var ua = window.navigator.userAgent;\n\n    if (\n      (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n      ua.indexOf('Mobile Safari') !== -1 &&\n      ua.indexOf('Chrome') === -1 &&\n      ua.indexOf('Windows Phone') === -1\n    ) {\n      return false\n    }\n\n    return window.history && 'pushState' in window.history\n  })();\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      // preserve existing history state as it could be overriden by the user\n      var stateCopy = extend({}, history.state);\n      stateCopy.key = getStateKey();\n      history.replaceState(stateCopy, '', url);\n    } else {\n      history.pushState({ key: setStateKey(genStateKey()) }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\nvar NavigationDuplicated = /*@__PURE__*/(function (Error) {\n  function NavigationDuplicated (normalizedLocation) {\n    Error.call(this);\n    this.name = this._name = 'NavigationDuplicated';\n    // passing the message to super() doesn't seem to work in the transpiled version\n    this.message = \"Navigating to current location (\\\"\" + (normalizedLocation.fullPath) + \"\\\") is not allowed\";\n    // add a stack property so services like Sentry can correctly display it\n    Object.defineProperty(this, 'stack', {\n      value: new Error().stack,\n      writable: true,\n      configurable: true\n    });\n    // we could also have used\n    // Error.captureStackTrace(this, this.constructor)\n    // but it only exists on node and chrome\n  }\n\n  if ( Error ) NavigationDuplicated.__proto__ = Error;\n  NavigationDuplicated.prototype = Object.create( Error && Error.prototype );\n  NavigationDuplicated.prototype.constructor = NavigationDuplicated;\n\n  return NavigationDuplicated;\n}(Error));\n\n// support IE9\nNavigationDuplicated._name = 'NavigationDuplicated';\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (\n  location,\n  onComplete,\n  onAbort\n) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(\n    route,\n    function () {\n      this$1.updateRoute(route);\n      onComplete && onComplete(route);\n      this$1.ensureURL();\n\n      // fire ready cbs once\n      if (!this$1.ready) {\n        this$1.ready = true;\n        this$1.readyCbs.forEach(function (cb) {\n          cb(route);\n        });\n      }\n    },\n    function (err) {\n      if (onAbort) {\n        onAbort(err);\n      }\n      if (err && !this$1.ready) {\n        this$1.ready = true;\n        this$1.readyErrorCbs.forEach(function (cb) {\n          cb(err);\n        });\n      }\n    }\n  );\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    // after merging https://github.com/vuejs/vue-router/pull/2771 we\n    // When the user navigates through history through back/forward buttons\n    // we do not want to throw the error. We only throw it if directly calling\n    // push/replace. That's why it's not included in isError\n    if (!isExtendedError(NavigationDuplicated, err) && isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) {\n          cb(err);\n        });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort(new NavigationDuplicated(route))\n  }\n\n  var ref = resolveQueue(\n    this.current.matched,\n    route.matched\n  );\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' &&\n            (typeof to.path === 'string' || typeof to.name === 'string'))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) {\n            cb();\n          });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(\n    activated,\n    'beforeRouteEnter',\n    function (guard, _, match, key) {\n      return bindEnterGuard(guard, match, key, cbs, isValid)\n    }\n  )\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n      next(cb);\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History ) HTML5History.__proto__ = History;\n  HTML5History.prototype = Object.create( History && History.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History) {\n  function HashHistory (router, base, fallback) {\n    History.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History ) HashHistory.__proto__ = History;\n  HashHistory.prototype = Object.create( History && History.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(\n      supportsPushState ? 'popstate' : 'hashchange',\n      function () {\n        var current = this$1.current;\n        if (!ensureSlash()) {\n          return\n        }\n        this$1.transitionTo(getHash(), function (route) {\n          if (supportsScroll) {\n            handleScroll(this$1.router, route, current, true);\n          }\n          if (!supportsPushState) {\n            replaceHash(route.fullPath);\n          }\n        });\n      }\n    );\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(\n      location,\n      function (route) {\n        pushHash(route.fullPath);\n        handleScroll(this$1.router, route, fromRoute, false);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(\n      location,\n      function (route) {\n        replaceHash(route.fullPath);\n        handleScroll(this$1.router, route, fromRoute, false);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(cleanPath(base + '/#' + location));\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n  // decode the hash but not the search or hash\n  // as search(query) is already decoded\n  // https://github.com/vuejs/vue-router/issues/2708\n  var searchIndex = href.indexOf('?');\n  if (searchIndex < 0) {\n    var hashIndex = href.indexOf('#');\n    if (hashIndex > -1) {\n      href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex);\n    } else { href = decodeURI(href); }\n  } else {\n    href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex);\n  }\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History) {\n  function AbstractHistory (router, base) {\n    History.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History ) AbstractHistory.__proto__ = History;\n  AbstractHistory.prototype = Object.create( History && History.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(\n      location,\n      function (route) {\n        this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n        this$1.index++;\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(\n      location,\n      function (route) {\n        this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n        onComplete && onComplete(route);\n      },\n      onAbort\n    );\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(\n      route,\n      function () {\n        this$1.index = targetIndex;\n        this$1.updateRoute(route);\n      },\n      function (err) {\n        if (isExtendedError(NavigationDuplicated, err)) {\n          this$1.index = targetIndex;\n        }\n      }\n    );\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  // $flow-disable-line\n  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      this$1.history.push(location, resolve, reject);\n    })\n  } else {\n    this.history.push(location, onComplete, onAbort);\n  }\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  // $flow-disable-line\n  if (!onComplete && !onAbort && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve, reject) {\n      this$1.history.replace(location, resolve, reject);\n    })\n  } else {\n    this.history.replace(location, onComplete, onAbort);\n  }\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(\n    to,\n    current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.1.6';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar ONE_SECOND_IN_TS = require('../utils/clock').ONE_SECOND_IN_TS;\n\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n      info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n      info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n      frame.ptsTime = frame.dts / ONE_SECOND_IN_TS;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","var version = '18.5.0';\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\n\nvar _Group = function () {\n\tthis._tweens = {};\n\tthis._tweensAddedDuringUpdate = {};\n};\n\n_Group.prototype = {\n\tgetAll: function () {\n\n\t\treturn Object.keys(this._tweens).map(function (tweenId) {\n\t\t\treturn this._tweens[tweenId];\n\t\t}.bind(this));\n\n\t},\n\n\tremoveAll: function () {\n\n\t\tthis._tweens = {};\n\n\t},\n\n\tadd: function (tween) {\n\n\t\tthis._tweens[tween.getId()] = tween;\n\t\tthis._tweensAddedDuringUpdate[tween.getId()] = tween;\n\n\t},\n\n\tremove: function (tween) {\n\n\t\tdelete this._tweens[tween.getId()];\n\t\tdelete this._tweensAddedDuringUpdate[tween.getId()];\n\n\t},\n\n\tupdate: function (time, preserve) {\n\n\t\tvar tweenIds = Object.keys(this._tweens);\n\n\t\tif (tweenIds.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t// Tweens are updated in \"batches\". If you add a new tween during an\n\t\t// update, then the new tween will be updated in the next batch.\n\t\t// If you remove a tween during an update, it may or may not be updated.\n\t\t// However, if the removed tween was added during the current batch,\n\t\t// then it will not be updated.\n\t\twhile (tweenIds.length > 0) {\n\t\t\tthis._tweensAddedDuringUpdate = {};\n\n\t\t\tfor (var i = 0; i < tweenIds.length; i++) {\n\n\t\t\t\tvar tween = this._tweens[tweenIds[i]];\n\n\t\t\t\tif (tween && tween.update(time) === false) {\n\t\t\t\t\ttween._isPlaying = false;\n\n\t\t\t\t\tif (!preserve) {\n\t\t\t\t\t\tdelete this._tweens[tweenIds[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttweenIds = Object.keys(this._tweensAddedDuringUpdate);\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\nvar TWEEN = new _Group();\n\nTWEEN.Group = _Group;\nTWEEN._nextId = 0;\nTWEEN.nextId = function () {\n\treturn TWEEN._nextId++;\n};\n\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof (self) === 'undefined' && typeof (process) !== 'undefined' && process.hrtime) {\n\tTWEEN.now = function () {\n\t\tvar time = process.hrtime();\n\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof (self) !== 'undefined' &&\n         self.performance !== undefined &&\n\t\t self.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tTWEEN.now = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tTWEEN.now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tTWEEN.now = function () {\n\t\treturn new Date().getTime();\n\t};\n}\n\n\nTWEEN.Tween = function (object, group) {\n\tthis._isPaused = false;\n\tthis._pauseStart = null;\n\tthis._object = object;\n\tthis._valuesStart = {};\n\tthis._valuesEnd = {};\n\tthis._valuesStartRepeat = {};\n\tthis._duration = 1000;\n\tthis._repeat = 0;\n\tthis._repeatDelayTime = undefined;\n\tthis._yoyo = false;\n\tthis._isPlaying = false;\n\tthis._reversed = false;\n\tthis._delayTime = 0;\n\tthis._startTime = null;\n\tthis._easingFunction = TWEEN.Easing.Linear.None;\n\tthis._interpolationFunction = TWEEN.Interpolation.Linear;\n\tthis._chainedTweens = [];\n\tthis._onStartCallback = null;\n\tthis._onStartCallbackFired = false;\n\tthis._onUpdateCallback = null;\n\tthis._onRepeatCallback = null;\n\tthis._onCompleteCallback = null;\n\tthis._onStopCallback = null;\n\tthis._group = group || TWEEN;\n\tthis._id = TWEEN.nextId();\n\n};\n\nTWEEN.Tween.prototype = {\n\tgetId: function () {\n\t\treturn this._id;\n\t},\n\n\tisPlaying: function () {\n\t\treturn this._isPlaying;\n\t},\n\n\tisPaused: function () {\n\t\treturn this._isPaused;\n\t},\n\n\tto: function (properties, duration) {\n\n\t\tthis._valuesEnd = Object.create(properties);\n\n\t\tif (duration !== undefined) {\n\t\t\tthis._duration = duration;\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tduration: function duration(d) {\n\t\tthis._duration = d;\n\t\treturn this;\n\t},\n\n\tstart: function (time) {\n\n\t\tthis._group.add(this);\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._isPaused = false;\n\n\t\tthis._onStartCallbackFired = false;\n\n\t\tthis._startTime = time !== undefined ? typeof time === 'string' ? TWEEN.now() + parseFloat(time) : time : TWEEN.now();\n\t\tthis._startTime += this._delayTime;\n\n\t\tfor (var property in this._valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (this._valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (this._valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\tthis._valuesEnd[property] = [this._object[property]].concat(this._valuesEnd[property]);\n\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (this._object[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Save the starting value, but only once.\n\t\t\tif (typeof(this._valuesStart[property]) === 'undefined') {\n\t\t\t\tthis._valuesStart[property] = this._object[property];\n\t\t\t}\n\n\t\t\tif ((this._valuesStart[property] instanceof Array) === false) {\n\t\t\t\tthis._valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\tthis._valuesStartRepeat[property] = this._valuesStart[property] || 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif (!this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._group.remove(this);\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._isPaused = false;\n\n\t\tif (this._onStopCallback !== null) {\n\t\t\tthis._onStopCallback(this._object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\n\t},\n\n\tend: function () {\n\n\t\tthis.update(Infinity);\n\t\treturn this;\n\n\t},\n\n\tpause: function(time) {\n\n\t\tif (this._isPaused || !this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._isPaused = true;\n\n\t\tthis._pauseStart = time === undefined ? TWEEN.now() : time;\n\n\t\tthis._group.remove(this);\n\n\t\treturn this;\n\n\t},\n\n\tresume: function(time) {\n\n\t\tif (!this._isPaused || !this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._isPaused = false;\n\n\t\tthis._startTime += (time === undefined ? TWEEN.now() : time)\n\t\t\t- this._pauseStart;\n\n\t\tthis._pauseStart = 0;\n\n\t\tthis._group.add(this);\n\n\t\treturn this;\n\n\t},\n\n\tstopChainedTweens: function () {\n\n\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\tthis._chainedTweens[i].stop();\n\t\t}\n\n\t},\n\n\tgroup: function (group) {\n\t\tthis._group = group;\n\t\treturn this;\n\t},\n\n\tdelay: function (amount) {\n\n\t\tthis._delayTime = amount;\n\t\treturn this;\n\n\t},\n\n\trepeat: function (times) {\n\n\t\tthis._repeat = times;\n\t\treturn this;\n\n\t},\n\n\trepeatDelay: function (amount) {\n\n\t\tthis._repeatDelayTime = amount;\n\t\treturn this;\n\n\t},\n\n\tyoyo: function (yoyo) {\n\n\t\tthis._yoyo = yoyo;\n\t\treturn this;\n\n\t},\n\n\teasing: function (easingFunction) {\n\n\t\tthis._easingFunction = easingFunction;\n\t\treturn this;\n\n\t},\n\n\tinterpolation: function (interpolationFunction) {\n\n\t\tthis._interpolationFunction = interpolationFunction;\n\t\treturn this;\n\n\t},\n\n\tchain: function () {\n\n\t\tthis._chainedTweens = arguments;\n\t\treturn this;\n\n\t},\n\n\tonStart: function (callback) {\n\n\t\tthis._onStartCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonUpdate: function (callback) {\n\n\t\tthis._onUpdateCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonRepeat: function onRepeat(callback) {\n\n\t\tthis._onRepeatCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonComplete: function (callback) {\n\n\t\tthis._onCompleteCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonStop: function (callback) {\n\n\t\tthis._onStopCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tupdate: function (time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < this._startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._onStartCallbackFired === false) {\n\n\t\t\tif (this._onStartCallback !== null) {\n\t\t\t\tthis._onStartCallback(this._object);\n\t\t\t}\n\n\t\t\tthis._onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = (time - this._startTime) / this._duration;\n\t\telapsed = (this._duration === 0 || elapsed > 1) ? 1 : elapsed;\n\n\t\tvalue = this._easingFunction(elapsed);\n\n\t\tfor (property in this._valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (this._valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = this._valuesStart[property] || 0;\n\t\t\tvar end = this._valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\tthis._object[property] = this._interpolationFunction(end, value);\n\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof (end) === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\tthis._object[property] = start + (end - start) * value;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._onUpdateCallback !== null) {\n\t\t\tthis._onUpdateCallback(this._object, elapsed);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (this._repeat > 0) {\n\n\t\t\t\tif (isFinite(this._repeat)) {\n\t\t\t\t\tthis._repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in this._valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof (this._valuesEnd[property]) === 'string') {\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._yoyo) {\n\t\t\t\t\t\tvar tmp = this._valuesStartRepeat[property];\n\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesEnd[property];\n\t\t\t\t\t\tthis._valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._valuesStart[property] = this._valuesStartRepeat[property];\n\n\t\t\t\t}\n\n\t\t\t\tif (this._yoyo) {\n\t\t\t\t\tthis._reversed = !this._reversed;\n\t\t\t\t}\n\n\t\t\t\tif (this._repeatDelayTime !== undefined) {\n\t\t\t\t\tthis._startTime = time + this._repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\tthis._startTime = time + this._delayTime;\n\t\t\t\t}\n\n\t\t\t\tif (this._onRepeatCallback !== null) {\n\t\t\t\t\tthis._onRepeatCallback(this._object);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\tif (this._onCompleteCallback !== null) {\n\n\t\t\t\t\tthis._onCompleteCallback(this._object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\tthis._chainedTweens[i].start(this._startTime + this._duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function (k) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\n\t},\n\n\tBezier: function (v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\n\t},\n\n\tCatmullRom: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\n\t\t}\n\n\t},\n\n\tUtils: {\n\n\t\tLinear: function (p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\n\t\t},\n\n\t\tBernstein: function (n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\n\t\t},\n\n\t\tFactorial: (function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\n\t\t\t};\n\n\t\t})(),\n\n\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n};\nTWEEN.version = version;\n\nexport default TWEEN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@tweenjs/tween.js/dist/tween.esm.js\n// module id = 3F2w\n// module chunks = 0","/*! @name m3u8-parser @version 4.4.0 @license Apache-2.0 */\nimport window from 'global/window';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text || '');\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = {\n                  'com.widevine.alpha': {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                  }\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = null\n// module chunks = ","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = null\n// module chunks = ","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Video.js 7.6.6 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.6\";\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap =\n  /*#__PURE__*/\n  function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    var SetSham;\n\n    if (!window$1.Set) {\n      SetSham =\n      /*#__PURE__*/\n      function () {\n        function SetSham() {\n          this.set_ = {};\n        }\n\n        var _proto2 = SetSham.prototype;\n\n        _proto2.has = function has(key) {\n          return key in this.set_;\n        };\n\n        _proto2[\"delete\"] = function _delete(key) {\n          var has = this.has(key);\n          delete this.set_[key];\n          return has;\n        };\n\n        _proto2.add = function add(key) {\n          this.set_[key] = 1;\n          return this;\n        };\n\n        _proto2.forEach = function forEach(callback, thisArg) {\n          for (var key in this.set_) {\n            callback.call(thisArg, key, key, this);\n          }\n        };\n\n        return SetSham;\n      }();\n    }\n\n    this.setTimeoutIds_ = window$1.Set ? new Set() : new SetSham();\n    this.setIntervalIds_ = window$1.Set ? new Set() : new SetSham();\n    this.rafIds_ = window$1.Set ? new Set() : new SetSham();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this4 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        _this4[idName].forEach(_this4[cancelName], _this4);\n      });\n      _this4.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), UPDATE_REFRESH_INTERVAL);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    var sizeKey = this.vertical() ? 'height' : 'width';\n\n    if (style[sizeKey] !== percentage) {\n      style[sizeKey] = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL$1 = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL$1);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL$1);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * Computes the median of an array.\n *\n * @param {number[]} arr\n *        Input array of numbers.\n *\n * @return {number}\n *        Median value.\n */\nvar median = function median(arr) {\n  var mid = Math.floor(arr.length / 2);\n  var sortedList = [].concat(arr).sort(function (a, b) {\n    return a - b;\n  });\n  return arr.length % 2 !== 0 ? sortedList[mid] : (sortedList[mid - 1] + sortedList[mid]) / 2;\n};\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = this.seekableIncrement_ * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        // we try to get the best fit value for the seeking increment\n        // variable from the last 12 values.\n        this.seekableIncrementList_ = this.seekableIncrementList_.slice(-11);\n        this.seekableIncrementList_.push(Math.abs(newSeekEnd - this.lastSeekEnd_));\n\n        if (this.seekableIncrementList_.length > 3) {\n          this.seekableIncrement_ = median(this.seekableIncrementList_);\n        }\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.seekableIncrementList_ = [];\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.6\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].dts,\n            end: frames[0].dts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].dts,\n          end: gops[gops.length - 1].dts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().uri);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.6\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = null\n// module chunks = ","/*!\n * Vue.js v2.6.11\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (process.env.NODE_ENV !== 'production' && isDef(data) && isDef(data.nativeOn)) {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.11';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:|^#/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /\\s+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anyting as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (name === 'v-slot' || name[0] === '#') {\n            checkFunctionParameterExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stripped = exp.replace(stripStringRE, '');\n  var keywordMatch = stripped.match(unaryOperatorsRE);\n  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\nfunction checkFunctionParameterExpression (exp, text, warn, range) {\n  try {\n    new Function(exp, '');\n  } catch (e) {\n    warn(\n      \"invalid function parameter expression: \" + (e.message) + \" in\\n\\n\" +\n      \"    \" + exp + \"\\n\\n\" +\n      \"  Raw expression: \" + (text.trim()) + \"\\n\",\n      range\n    );\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flushCCStreams = function(flushType) {\n  this.ccStreams_.forEach(function(cc) {\n    return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n  }, this);\n};\n\nCaptionStream.prototype.flushStream = function(flushType) {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.flushCCStreams(flushType);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.flushCCStreams(flushType);\n};\n\nCaptionStream.prototype.flush = function() {\n  return this.flushStream('flush');\n};\n\n// Only called if handling partial data\nCaptionStream.prototype.partialFlush = function() {\n  return this.flushStream('partialFlush');\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 8Ig8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 8KjM\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n  if (trackId === null) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n  // Stores whether we are receiving partial data or not\n  var parsingPartial;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function(options) {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n    parsingPartial = options ? options.isPartial : false;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one.\n    // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n    } else if (trackId === null || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    if (!parsingPartial) {\n      captionStream.flush();\n    } else {\n      captionStream.partialFlush();\n    }\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = Jyyp\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/utils.js\n// module id = SkH0\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nvar toHexString = function(value) {\n  return ('00' + value.toString(16)).slice(-2);\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned,\n  toHexString: toHexString\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = lamJ\n// module chunks = 0","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keycode/index.js\n// module id = ljAp\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  this.on('partialdone', function(flushSource) {\n    destination.partialFlush(flushSource);\n  });\n\n  this.on('endedtimeline', function(flushSource) {\n    destination.endTimeline(flushSource);\n  });\n\n  this.on('reset', function(flushSource) {\n    destination.reset(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nStream.prototype.partialFlush = function(flushSource) {\n  this.trigger('partialdone', flushSource);\n};\n\nStream.prototype.endTimeline = function(flushSource) {\n  this.trigger('endedtimeline', flushSource);\n};\n\nStream.prototype.reset = function(flushSource) {\n  this.trigger('reset', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar TYPE_SHARED = 'shared';\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  // The \"shared\" type is used in cases where a stream will contain muxed\n  // video and audio. We could use `undefined` here, but having a string\n  // makes debugging a little clearer.\n  this.type_ = type || TYPE_SHARED;\n\n  this.push = function(data) {\n\n    // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n    // streams will only accept data that matches their type.\n    if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.endTimeline = function() {\n    this.flush();\n    this.trigger('endedtimeline');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n  this.reset = function() {\n    this.discontinuity();\n    this.trigger('reset');\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0"],"sourceRoot":""}